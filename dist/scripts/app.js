"use strict";var unifyApp=angular.module("unifyApp",["angular-loading-bar","ngResource","ngAnimate","ui.router","ui.bootstrap","config","pascalprecht.translate","satellizer"]);angular.module("unifyApp").config(function($authProvider,ENV){$authProvider.baseUrl=ENV.apiEndPoint,$authProvider.unlinkUrl=ENV.unlinkUrl,$authProvider.unlinkMethod=ENV.unlinkMethod,$authProvider.facebook({clientId:"805638479520745",url:"/auth/facebook"}),$authProvider.google({clientId:"79996335280-gc0hh1efoo859u1lqaqct2v3u1larsrj.apps.googleusercontent.com",url:"/auth/google"}),$authProvider.twitter({url:"/auth/twitter"}),$authProvider.oauth2({name:"instagram",url:"/auth/instagram",redirectUri:window.location.origin,clientId:"ad148c3db70f4b7188a0e30c1b74ea06",requiredUrlParams:["scope"],scope:["likes"],scopeDelimiter:"+",authorizationEndpoint:"https://api.instagram.com/oauth/authorize"})}),angular.module("config",[]).constant("ENV",{apiEndPoint:"http://api-unify.herokuapp.com",name:"production",storageUserId:"unifyUserId",storageMainCircleId:"unifyMainCircleId",unlinkMethod:"delete",unlinkUrl:"/auth/"}),unifyApp.controller("CircleController",function(CircleService,AuthenticationService){var circleCtrl=this;circleCtrl.circle_id=AuthenticationService.getMainCircleId(),circleCtrl.getCircle=function(){CircleService.circle.get({user_id:AuthenticationService.getUserId(),circle_id:circleCtrl.circle_id},function(response){circleCtrl.circle=response.circle,localStorage.setItem("response",JSON.stringify(response))})},circleCtrl.edit=function(){circleCtrl.editCircle=!0,circleCtrl.newCircle={}},circleCtrl.updateCircle=function(){CircleService.updateCircle(AuthenticationService.getUserId(),circleCtrl.newUser).then(function(data){console.log("Save: "+data),circleCtrl.user.name=circleCtrl.newUser.name,circleCtrl.user.email=circleCtrl.newUser.email,circleCtrl.editCircle=!1})},circleCtrl.saveCircle=function(){circleCtrl.newCircle.user_id=AuthenticationService.getUserId(),circleCtrl.newCircle.parent=circleCtrl.circle_id,CircleService.saveCircle(circleCtrl.newCircle).then(function(data){circleCtrl.getCircleTree(),circleCtrl.editCircle=!1})},circleCtrl.cancelCircle=function(){circleCtrl.editCircle=!1,circleCtrl.newCircle={}},circleCtrl.getCircleTree=function(){CircleService.getCircleTree(AuthenticationService.getUserId(),circleCtrl.circle_id).then(function(data){circleCtrl.tree=data.tree[0]})},circleCtrl.goToChild=function(circle_id){circleCtrl.circle_id=circle_id,circleCtrl.cancelCircle(),circleCtrl.circle={},circleCtrl.getCircle(),circleCtrl.getCircleTree()},circleCtrl.goToParent=function(){circleCtrl.circle_id=circleCtrl.circle.parent,circleCtrl.cancelCircle(),circleCtrl.circle={},circleCtrl.getCircle(),circleCtrl.getCircleTree()},circleCtrl.createContact=function(){circleCtrl.editContact=!0},circleCtrl.closeContact=function(){circleCtrl.editContact=!1,circleCtrl.circle={},circleCtrl.getCircle()},circleCtrl.getCircleTree(),circleCtrl.getCircle()}),unifyApp.controller("ContactController",function($scope,ContactService,AuthenticationService){var contactCtrl=this;contactCtrl.getContact=function(contact_id){ContactService.contact.get({user_id:AuthenticationService.getUserId(),contact_id:contact_id},function(response){contactCtrl.contact=response.contact,localStorage.setItem("response",JSON.stringify(response))})},contactCtrl.edit=function(){contactCtrl.editProfile=!0,contactCtrl.contact={}},contactCtrl.updateContact=function(){ContactService.updateContact(AuthenticationService.getUserId(),contactCtrl.newUser).then(function(data){console.log("Save: "+data),contactCtrl.user.name=contactCtrl.newUser.name,contactCtrl.user.email=contactCtrl.newUser.email,contactCtrl.editProfile=!1})},contactCtrl.saveContact=function(){contactCtrl.contact.user_id=AuthenticationService.getUserId(),contactCtrl.contact.circle_id=contactCtrl.circle_id,ContactService.saveContact(contactCtrl.contact).then(function(data){contactCtrl.contact={}})},contactCtrl.cancelContact=function(){contactCtrl.editProfile=!1,contactCtrl.contact={}},contactCtrl.getFriends=function(){ContactService.getFriends(AuthenticationService.getUserId()).then(function(data){data&&(contactCtrl.friends=data.friends)})},contactCtrl.getFriends()}),unifyApp.controller("LoginController",function($scope,$auth,AuthenticationService){$scope.loggueado=$auth.isAuthenticated(),$scope.login=function(){AuthenticationService.login($scope.user)},$scope.authenticate=function(provider){AuthenticationService.authenticate(provider)}}),unifyApp.controller("MainController",function($translate,ENV){}),unifyApp.controller("ProfileController",function($scope,ProfileService,AuthenticationService){ProfileService.user.get({user_id:AuthenticationService.getUserId()},function(response){$scope.user=response.user,localStorage.setItem("response",JSON.stringify(response))}),$scope.authenticate=function(provider){AuthenticationService.authenticate(provider)},$scope.unlink=function(provider){AuthenticationService.unlink(provider)},$scope.edit=function(){$scope.newUser={},$scope.newUser.name=$scope.user.name,$scope.newUser.email=$scope.user.email,$scope.editProfile=!0},$scope.save=function(){ProfileService.saveUser(AuthenticationService.getUserId(),$scope.newUser).then(function(data){$scope.user.name=$scope.newUser.name,$scope.user.email=$scope.newUser.email,$scope.editProfile=!1})}}),unifyApp.controller("SignUpController",function($scope,$state,AuthenticationService){$scope.signup=function(){AuthenticationService.signup($scope.user)}}),unifyApp.directive("uwLoader",function($auth){return{restrict:"E",templateUrl:"views/loader.html"}}),unifyApp.directive("uwMainContent",function($auth){var link=function(scope,elm,attrs,ctrl){};return{restrict:"E",link:link,templateUrl:function(elem,attr){return $auth.isAuthenticated()?"views/dashboard.html":"views/loginSignUp.html"}}}),angular.module("unifyApp").config(function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("main",{url:"/",templateUrl:"views/main.html"}),$stateProvider.state("login",{url:"/login",templateUrl:"views/login.html"}),$stateProvider.state("signUp",{url:"/signUp",templateUrl:"views/signUp.html"}),$stateProvider.state("dashboard",{url:"/dashboard",templateUrl:"views/dashboard.html"}),$stateProvider.state("circles",{url:"/circles",templateUrl:"views/circle.html"}),$stateProvider.state("bookTickets",{url:"#/bookTickets/:id",templateUrl:"views/bookTickets.html"})}),unifyApp.service("AuthenticationService",function($http,$auth,$state,ENV){var userId,mainCircleId,getUserId=function(){return null==userId&&setUserId(localStorage.getItem(ENV.storageUserId)),userId},setUserId=function(value){localStorage.setItem(ENV.storageUserId,value),userId=value},getMainCircleId=function(){return null==mainCircleId&&setMainCircleId(localStorage.getItem(ENV.storageMainCircleId)),mainCircleId},setMainCircleId=function(value){localStorage.setItem(ENV.storageMainCircleId,value),mainCircleId=value},signup=function(user){console.log(user.name),$auth.signup({name:user.name,email:user.email,password:user.password,confirm_password:user.confirmpassword}).then(function(){setUserId(response.data.user._id),setMainCircleId(response.data.user.main_circle),localStorage.setItem("response",JSON.stringify(response)),console.log("You have successfully logged in: "+response.data.token),$state.go("dashboard")})["catch"](function(response){console.log(response.data?response.data.message:response)})},login=function(user){$auth.login({email:user.email,password:user.password}).then(function(){setUserId(response.data.user._id),setMainCircleId(response.data.user.main_circle),localStorage.setItem("response",JSON.stringify(response)),console.log("You have successfully logged in: "+response.data.token),$state.go("dashboard")})["catch"](function(response){console.log(response.data?response.data.message:response)})},authenticate=function(provider){$auth.authenticate(provider).then(function(response){setUserId(response.data.user._id),setMainCircleId(response.data.user.main_circle),localStorage.setItem("response",JSON.stringify(response)),console.log("You have successfully logged in: "+response.data.token)})["catch"](function(response){console.log(response.data?response.data.message:response)})},unlink=function(provider){var req={method:"DELETE",url:ENV.apiEndPoint+"/auth/"+provider,headers:{Authorization:"Bearer "+localStorage.getItem("satellizer_token")}};$http(req).then(function(response){localStorage.setItem("response",JSON.stringify(response)),localStorage.setItem("satellizer_token",response.data.token),console.log("You have successfully unlogged in: "+response.data.token),$state.go("dashboard")})["catch"](function(response){console.log(response.data.message)})};return{signup:signup,login:login,authenticate:authenticate,unlink:unlink,getUserId:getUserId,getMainCircleId:getMainCircleId}}),unifyApp.factory("CircleService",function($http,$resource,ENV){var circle=$resource(ENV.apiEndPoint+"/api/user/:user_id/circle/:circle_id",{circle_id:"@_id"},{update:{method:"PUT"}}),saveCircle=function(circle){var promise=$http.post(ENV.apiEndPoint+"/api/user/"+circle.user_id+"/circle",{user_id:circle.user_id,name:circle.name,parent_id:circle.parent,picture:circle.picture}).then(function(response){return response.data},function(response){console.log(response.data.message)});return promise},updateCircle=function(circle){var promise=$http.put(ENV.apiEndPoint+"/api/user/"+circle.user_id+"/circle/"+circle.circle_id,{user_id:circle.user_id,circle_id:circle.circle_id,name:circle.name,parent_id:circle.parent,picture:circle.picture}).then(function(response){return response.data},function(response){console.log(response.data.message)});return promise},getCircleTree=function(user_id,circle_id){var promise=$http.get(ENV.apiEndPoint+"/api/user/"+user_id+"/circle/"+circle_id+"/tree").then(function(response){return response.data},function(response){console.log(response.data.message)});return promise};return{circle:circle,saveCircle:saveCircle,updateCircle:updateCircle,getCircleTree:getCircleTree}}),unifyApp.factory("ContactService",function($http,$resource,ENV){var contact=$resource(ENV.apiEndPoint+"/api/user/:user_id/contact/:contact_id",{contact_id:"@_id"},{update:{method:"PUT"}}),saveContact=function(contact){var promise=$http.post(ENV.apiEndPoint+"/api/user/"+contact.user_id+"/contact",{user_id:contact.user_id,name:contact.name,picture:contact.picture,circle_id:contact.circle_id,facebook_id:null!=contact.facebook?contact.facebook.id:null,twitter_id:null!=contact.twitter?contact.twitter.id:null,instagram_id:null!=contact.instagram?contact.instagram.id:null,facebook_display_name:null!=contact.facebook?contact.facebook.name:null,twitter_username:null!=contact.twitter?contact.twitter.username:null,instagram_username:null!=contact.instagram?contact.instagram.username:null}).then(function(response){return response.data},function(response){console.log(response.data.message)});return promise},updateContact=function(contact){var promise=$http.put(ENV.apiEndPoint+"/api/user/"+contact.user_id+"/contact/"+contact.contact_id,{user_id:contact.user_id,contact_id:contact.contact_id,name:contact.name,picture:contact.picture,circle_id:contact.circle_id,facebook_id:contact.facebook_id,twitter_id:contact.twitter_id,instagram_id:contact.instagram_id}).then(function(response){return response.data},function(response){console.log(response.data.message)});return promise},getFriends=function(user_id){var promise=$http.get(ENV.apiEndPoint+"/api/user/"+user_id+"/friends").then(function(response){return response.data},function(response){console.log(response.data.message)});return promise};return{contact:contact,saveContact:saveContact,updateContact:updateContact,getFriends:getFriends}}),unifyApp.factory("ProfileService",function($http,$resource,ENV){var user=$resource(ENV.apiEndPoint+"/api/user/:user_id",{user_id:"@_id"},{update:{method:"PUT"}}),saveUser=function(user_id,user){var promise=$http.put(ENV.apiEndPoint+"/api/user/"+user_id,{user_id:user_id,email:user.email,name:user.name,password:user.password,confirm_password:user.confirm_password}).then(function(response){return response.data},function(response){console.log(response.data.message)});return promise};return{user:user,saveUser:saveUser}}),angular.module("unifyApp").config(function($translateProvider){$translateProvider.useStaticFilesLoader({prefix:"scripts/i18n/locale-",suffix:".json"}),$translateProvider.preferredLanguage("es_AR")});