"use strict";var unifyApp=angular.module("unifyApp",["angular-loading-bar","ngVideo","ngResource","ngAnimate","ui.router","ui.bootstrap","config","pascalprecht.translate","satellizer"]).config(["cfpLoadingBarProvider",function(cfpLoadingBarProvider){cfpLoadingBarProvider.includeSpinner=!1}]);angular.module("unifyApp").config(function($authProvider,ENV){$authProvider.baseUrl=ENV.apiEndPoint,$authProvider.unlinkUrl=ENV.unlinkUrl,$authProvider.unlinkMethod=ENV.unlinkMethod,$authProvider.facebook({clientId:"805638479520745",url:"/auth/facebook",scope:["email","public_profile","user_friends","user_likes","publish_actions","user_posts","user_videos","user_photos","user_status"]}),$authProvider.google({clientId:"79996335280-gc0hh1efoo859u1lqaqct2v3u1larsrj.apps.googleusercontent.com",url:"/auth/google"}),$authProvider.twitter({url:"/auth/twitter"}),$authProvider.oauth2({name:"instagram",url:"/auth/instagram",redirectUri:window.location.origin,clientId:"ad148c3db70f4b7188a0e30c1b74ea06",requiredUrlParams:["scope"],scope:["likes"],scopeDelimiter:"+",authorizationEndpoint:"https://api.instagram.com/oauth/authorize"})}),angular.module("config",[]).constant("ENV",{apiEndPoint:"http://api-unify.herokuapp.com",name:"production",storageUserId:"unifyUserId",storageMainCircleId:"unifyMainCircleId",unlinkMethod:"delete",unlinkUrl:"/auth/"}),unifyApp.controller("CircleController",function($scope,video,CircleService,AuthenticationService){var circleCtrl=this;circleCtrl.circle_id=AuthenticationService.getMainCircleId(),circleCtrl.mainCircle_id=AuthenticationService.getMainCircleId(),circleCtrl.getCircle=function(){circleCtrl.circle=null,CircleService.circle.get({user_id:AuthenticationService.getUserId(),circle_id:circleCtrl.circle_id},function(response){if(circleCtrl.circle=response.circle,!circleCtrl.circle.picture)if(circleCtrl.circle.contacts){if(circleCtrl.contactSize=_.size(circleCtrl.circle.contacts),circleCtrl.imagesCircle={},circleCtrl.contactSize>0){circleCtrl.contactSize<4?circleCtrl.contactSize:4;circleCtrl.imagesCircle=_.sample(circleCtrl.circle.contacts,4)}}else circleCtrl.contactSize=0})},circleCtrl.deleteCircle=function(){var circle_id=circleCtrl.circle_id;CircleService.circle["delete"]({user_id:AuthenticationService.getUserId(),circle_id:circleCtrl.circle_id},function(response){circleCtrl.goToCircle(circle_id)})},circleCtrl.create=function(){circleCtrl.createCircle=!0,circleCtrl.newCircle={}},circleCtrl.edit=function(){circleCtrl.editingCircle=!0,circleCtrl.editCircle=circleCtrl.circle},circleCtrl.updateCircle=function(){circleCtrl.editCircle.user_id=AuthenticationService.getUserId(),CircleService.updateCircle(circleCtrl.editCircle).then(function(data){circleCtrl.circle=circleCtrl.editCircle,circleCtrl.editingCircle=!1})},circleCtrl.saveCircle=function(){circleCtrl.newCircle.user_id=AuthenticationService.getUserId(),circleCtrl.newCircle.parent=circleCtrl.circle_id,CircleService.saveCircle(circleCtrl.newCircle).then(function(data){circleCtrl.getCircleTree(),circleCtrl.createCircle=!1})},circleCtrl.cancelCircle=function(){circleCtrl.createCircle=!1,circleCtrl.newCircle={},circleCtrl.editingCircle=!1,circleCtrl.editCircle=circleCtrl.circle},circleCtrl.getCircleTree=function(){CircleService.getCircleTree(AuthenticationService.getUserId(),circleCtrl.circle_id).then(function(data){circleCtrl.tree=data.tree[0]})},circleCtrl.getCircleFeed=function(){circleCtrl.feed=null,CircleService.getCircleFeed(AuthenticationService.getUserId(),circleCtrl.circle_id).then(function(data){circleCtrl.feed=data.media})},circleCtrl.goToCircle=function(circle_id){circleCtrl.circle_id=circle_id,circleCtrl.cancelContact(),circleCtrl.cancelCircle(),circleCtrl.getCircle(),circleCtrl.getCircleTree(),circleCtrl.getCircleFeed()},circleCtrl.goToParent=function(){circleCtrl.circle_id=circleCtrl.circle.parent,circleCtrl.cancelContact(),circleCtrl.cancelCircle(),circleCtrl.getCircle(),circleCtrl.getCircleTree(),circleCtrl.getCircleFeed()},circleCtrl.createContact=function(){circleCtrl.editContact=!0,circleCtrl.contact_id=null},circleCtrl.closeContact=function(){circleCtrl.editContact=!1,circleCtrl.getCircle(),circleCtrl.getCircleTree(),circleCtrl.getCircleFeed()},circleCtrl.cancelContact=function(){circleCtrl.editContact=!1},circleCtrl.getCircleTree(),circleCtrl.getCircle(),circleCtrl.getCircleFeed()}),unifyApp.controller("ContactController",function($scope,$state,$interval,ContactService,AuthenticationService){var contactCtrl=this;contactCtrl.getContact=function(contact_id){ContactService.contact.get({user_id:AuthenticationService.getUserId(),contact_id:contact_id},function(response){contactCtrl.contact=response.contact,contactCtrl.friends?contactCtrl.getFriends():contactCtrl.checkFriends()})},contactCtrl.getFriends=function(){contactCtrl.friends&&(contactCtrl.contact.facebook&&contactCtrl.friends.facebook&&(contactCtrl.contact.facebook=_.find(contactCtrl.friends.facebook.list,function(friend){return friend.id==contactCtrl.contact.facebook.id})),contactCtrl.contact.twitter&&contactCtrl.friends.twitter&&(contactCtrl.contact.twitter=_.find(contactCtrl.friends.twitter.list,function(friend){return friend.id==contactCtrl.contact.twitter.id})),contactCtrl.contact.instagram&&contactCtrl.friends.instagram&&(contactCtrl.contact.instagram=_.find(contactCtrl.friends.instagram.list,function(friend){return friend.id==contactCtrl.contact.instagram.id})))},contactCtrl.checkFriends=function(){console.log("LALA4");var check=$interval(function(){console.log("LALA"),contactCtrl.friends=AuthenticationService.getFriends(),contactCtrl.friends&&contactCtrl.getFriends()},2e3);$scope.$watch("contactCtrl.friends",function(newValue,oldValue){newValue&&$interval.cancel(check)})},contactCtrl.deleteContact=function(contact_id){ContactService.contact["delete"]({user_id:AuthenticationService.getUserId(),contact_id:contact_id},function(response){$state.go("circles")})},contactCtrl.edit=function(){contactCtrl.editProfile=!0,contactCtrl.contact={}},contactCtrl.saveContact=function(){contactCtrl.contact.user_id=AuthenticationService.getUserId(),contactCtrl.contact.circle_id=contactCtrl.circle_id,ContactService.saveContact(contactCtrl.contact).then(function(data){})},contactCtrl.updateContact=function(){contactCtrl.contact.user_id=AuthenticationService.getUserId(),contactCtrl.contact.circle_id=contactCtrl.circle_id,ContactService.updateContact(contactCtrl.contact).then(function(data){})},contactCtrl.cancelContact=function(){contactCtrl.contact={},contactCtrl.contact_id=null,contactCtrl.circle_id=null,contactCtrl.editProfile=!1},$scope.$watch("contactCtrl.parentController.editContact",function(newValue,oldValue){1==newValue&&contactCtrl.contact_id?contactCtrl.getContact(contactCtrl.contact_id):contactCtrl.contact={}}),contactCtrl.init=function(circle_id,contact_id,parentController){contactCtrl.circle_id=circle_id,contactCtrl.parentController=parentController,contactCtrl.contact_id=contact_id,contactCtrl.friends=AuthenticationService.getFriends(),contactCtrl.contact_id?contactCtrl.getContact(contactCtrl.contact_id):contactCtrl.friends||contactCtrl.checkFriends()}}),unifyApp.controller("ContactProfileController",function($scope,$stateParams,ContactService,AuthenticationService){var contactCtrl=this;contactCtrl.getContact=function(contact_id){ContactService.contact.get({user_id:AuthenticationService.getUserId(),contact_id:contact_id},function(response){contactCtrl.contact=response.contact,localStorage.setItem("response",JSON.stringify(response))})},contactCtrl.edit=function(){contactCtrl.editContact=!0},contactCtrl.closeContact=function(){contactCtrl.editContact=!1,contactCtrl.getContact(contactCtrl.contact_id),contactCtrl.getContactFeed()},contactCtrl.cancelContact=function(){contactCtrl.editContact=!1},contactCtrl.cancelContact=function(){contactCtrl.contact_id=null,contactCtrl.circle_id=null,contactCtrl.editContact=!1},contactCtrl.getContactFeed=function(){contactCtrl.feed=null,ContactService.getContactFeed(AuthenticationService.getUserId(),contactCtrl.contact_id).then(function(data){contactCtrl.feed=data.media})},$stateParams.contact_id&&(contactCtrl.contact_id=$stateParams.contact_id,contactCtrl.getContact(contactCtrl.contact_id),contactCtrl.getContactFeed())}),unifyApp.controller("LoginController",function($scope,$auth,AuthenticationService){$scope.login=function(){AuthenticationService.login($scope.user)},$scope.authenticate=function(provider){AuthenticationService.authenticate(provider)}}),unifyApp.controller("MainController",function($translate,$auth,ENV,AuthenticationService){var mainController=this;$auth.isAuthenticated()&&AuthenticationService.getFriends(),mainController.auth=$auth.isAuthenticated(),mainController.logout=function(){AuthenticationService.logout()}}),unifyApp.controller("ProfileController",function(ProfileService,AuthenticationService){var profileCtlr=this;ProfileService.user.get({user_id:AuthenticationService.getUserId()},function(response){profileCtlr.user=response.user}),profileCtlr.authenticate=function(provider){AuthenticationService.authenticate(provider)},profileCtlr.unlink=function(provider){AuthenticationService.unlink(provider)},profileCtlr.edit=function(){profileCtlr.newUser={},profileCtlr.newUser.name=profileCtlr.user.name,profileCtlr.newUser.email=profileCtlr.user.email,profileCtlr.editProfile=!0},profileCtlr.save=function(){ProfileService.saveUser(AuthenticationService.getUserId(),profileCtlr.newUser).then(function(data){profileCtlr.user.name=profileCtlr.newUser.name,profileCtlr.user.email=profileCtlr.newUser.email,profileCtlr.editProfile=!1})},profileCtlr.getFeed=function(){profileCtlr.feed=null,ProfileService.getFeed(AuthenticationService.getUserId()).then(function(data){profileCtlr.feed=data.media})},profileCtlr.getFeed()}),unifyApp.controller("SignUpController",function($scope,$state,AuthenticationService){$scope.signup=function(){AuthenticationService.signup($scope.user)}}),unifyApp.controller("VideoController",function($scope,video,$modal){$scope.open=function(source){$modal.open({animation:$scope.animationsEnabled,templateUrl:"myModalContent.html",controller:"ModalInstanceCtrl",resolve:{source:function(){return source}}})}}),unifyApp.controller("ModalInstanceCtrl",function($scope,$modalInstance,source,video){console.log(source),video.addSource("mp4",source,!0)}),unifyApp.directive("uwContactData",function(){return{restrict:"E",templateUrl:"views/contact.html",scope:{uwContactId:"=",uwCircleId:"=",uwParentController:"="}}}),unifyApp.directive("uwLoader",function(){return{restrict:"E",templateUrl:"views/loader.html"}}),unifyApp.directive("uwMainContent",function($auth){var link=function(scope,elm,attrs,ctrl){};return{restrict:"E",link:link,templateUrl:function(elem,attr){return $auth.isAuthenticated()?"views/userProfile.html":"views/loginSignUp.html"}}}),unifyApp.directive("uwTimeLine",function(){return{restrict:"E",templateUrl:"views/timeline.html",scope:{uwMedia:"="}}}),unifyApp.directive("uwVideo",function(){var link=function(scope,elm,attrs,ctrl){};return{restrict:"E",link:link,templateUrl:"views/video.html",scope:{videoSrc:"="}}}),angular.module("unifyApp").config(function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("main",{url:"/",templateUrl:"views/main.html"}),$stateProvider.state("login",{url:"/login",templateUrl:"views/login.html"}),$stateProvider.state("signUp",{url:"/signUp",templateUrl:"views/signUp.html"}),$stateProvider.state("profile",{url:"/profile",templateUrl:"views/userProfile.html"}),$stateProvider.state("editProfile",{url:"/profile/edit",templateUrl:"views/userEditProfile.html"}),$stateProvider.state("dashboard",{url:"/circles",templateUrl:"views/circle.html"}),$stateProvider.state("contact",{url:"/contact/:contact_id",templateUrl:"views/contactProfile.html"})}),unifyApp.service("AuthenticationService",function($http,$auth,$state,$window,ENV){var userId,mainCircleId,friends,getUserId=function(){return null==userId&&setUserId(localStorage.getItem(ENV.storageUserId)),userId},setUserId=function(value){localStorage.setItem(ENV.storageUserId,value),userId=value},getMainCircleId=function(){return null==mainCircleId&&setMainCircleId(localStorage.getItem(ENV.storageMainCircleId)),mainCircleId},setMainCircleId=function(value){localStorage.setItem(ENV.storageMainCircleId,value),mainCircleId=value},getFriends=function(){return getUserId()?(null==friends&&getUserFriends(getUserId()).then(function(data){data&&(friends=data.friends)}),friends):null},signup=function(user){console.log(user.name),$auth.signup({name:user.name,email:user.email,password:user.password,confirm_password:user.confirmpassword}).then(function(){setUserId(response.data.user._id),setMainCircleId(response.data.user.main_circle),localStorage.setItem("response",JSON.stringify(response)),console.log("You have successfully logged in: "+response.data.token),$window.location.href="/"})["catch"](function(response){console.log(response.data?response.data.message:response)})},login=function(user){$auth.login({email:user.email,password:user.password}).then(function(){setUserId(response.data.user._id),setMainCircleId(response.data.user.main_circle),localStorage.setItem("response",JSON.stringify(response)),console.log("You have successfully logged in: "+response.data.token),$window.location.href="/"})["catch"](function(response){console.log(response.data?response.data.message:response)})},authenticate=function(provider){$auth.authenticate(provider).then(function(response){setUserId(response.data.user._id),setMainCircleId(response.data.user.main_circle),localStorage.setItem("response",JSON.stringify(response)),console.log("You have successfully logged in: "+response.data.token),$window.location.href="/"})["catch"](function(response){console.log(response.data?response.data.message:response)})},unlink=function(provider){var req={method:"DELETE",url:ENV.apiEndPoint+"/auth/"+provider,headers:{Authorization:"Bearer "+localStorage.getItem("satellizer_token")}};$http(req).then(function(response){localStorage.setItem("response",JSON.stringify(response)),localStorage.setItem("satellizer_token",response.data.token),console.log("You have successfully unlogged in: "+response.data.token),$window.location.href="/"})["catch"](function(response){console.log(response.data.message)})},getUserFriends=function(user_id){var promise=$http.get(ENV.apiEndPoint+"/api/user/"+user_id+"/friends").then(function(response){return response.data},function(response){console.log(response.data.message)});return promise},logout=function(){localStorage.clear(),$window.location.href="/"};return{signup:signup,login:login,authenticate:authenticate,unlink:unlink,getUserId:getUserId,getMainCircleId:getMainCircleId,getFriends:getFriends,logout:logout}}),unifyApp.factory("CircleService",function($http,$resource,ENV){var circle=$resource(ENV.apiEndPoint+"/api/user/:user_id/circle/:circle_id",{circle_id:"@_id"},{update:{method:"PUT"}}),saveCircle=function(circle){var promise=$http.post(ENV.apiEndPoint+"/api/user/"+circle.user_id+"/circle",{user_id:circle.user_id,name:circle.name,parent_id:circle.parent,picture:circle.picture}).then(function(response){return response.data},function(response){console.log(response.data.message)});return promise},updateCircle=function(circle){var promise=$http.put(ENV.apiEndPoint+"/api/user/"+circle.user_id+"/circle/"+circle._id,{user_id:circle.user_id,circle_id:circle._id,name:circle.name,parent_id:circle.parent,picture:circle.picture}).then(function(response){return response.data},function(response){console.log(response.data.message)});return promise},getCircleTree=function(user_id,circle_id){var promise=$http.get(ENV.apiEndPoint+"/api/user/"+user_id+"/circle/"+circle_id+"/tree").then(function(response){return response.data},function(response){console.log(response.data.message)});return promise},getCircleFeed=function(user_id,circle_id){var promise=$http.get(ENV.apiEndPoint+"/api/user/"+user_id+"/circle/"+circle_id+"/media").then(function(response){return response.data},function(response){console.log(response.data.message)});return promise};return{circle:circle,saveCircle:saveCircle,updateCircle:updateCircle,getCircleTree:getCircleTree,getCircleFeed:getCircleFeed}}),unifyApp.factory("ContactService",function($http,$resource,ENV){var contact=$resource(ENV.apiEndPoint+"/api/user/:user_id/contact/:contact_id",{contact_id:"@_id"},{update:{method:"PUT"}}),saveContact=function(contact){var promise=$http.post(ENV.apiEndPoint+"/api/user/"+contact.user_id+"/contact",{user_id:contact.user_id,name:contact.name,picture:contact.picture,circle_id:contact.circle_id,facebook_id:null!=contact.facebook?contact.facebook.id:null,twitter_id:null!=contact.twitter?contact.twitter.id:null,instagram_id:null!=contact.instagram?contact.instagram.id:null,facebook_display_name:null!=contact.facebook?contact.facebook.name:null,twitter_username:null!=contact.twitter?contact.twitter.username:null,instagram_username:null!=contact.instagram?contact.instagram.username:null}).then(function(response){return response.data},function(response){console.log(response.data.message)});return promise},updateContact=function(contact){var promise=$http.put(ENV.apiEndPoint+"/api/user/"+contact.user_id+"/contact/"+contact._id,{user_id:contact.user_id,contact_id:contact._id,name:contact.name,picture:contact.picture,circle_id:contact.parents[0].circle,facebook_id:null!=contact.facebook?contact.facebook.id:null,twitter_id:null!=contact.twitter?contact.twitter.id:null,instagram_id:null!=contact.instagram?contact.instagram.id:null}).then(function(response){return response.data},function(response){console.log(response.data.message)});return promise},getContactFeed=function(user_id,contact_id){var promise=$http.get(ENV.apiEndPoint+"/api/user/"+user_id+"/contact/"+contact_id+"/media").then(function(response){return response.data},function(response){console.log(response.data.message)});return promise};return{contact:contact,saveContact:saveContact,updateContact:updateContact,getContactFeed:getContactFeed}}),unifyApp.factory("ProfileService",function($http,$resource,ENV){var user=$resource(ENV.apiEndPoint+"/api/user/:user_id",{user_id:"@_id"},{update:{method:"PUT"}}),saveUser=function(user_id,user){var promise=$http.put(ENV.apiEndPoint+"/api/user/"+user_id,{user_id:user_id,email:user.email,name:user.name,password:user.password,confirm_password:user.confirm_password}).then(function(response){return response.data},function(response){console.log(response.data.message)});return promise},getFeed=function(user_id){var promise=$http.get(ENV.apiEndPoint+"/api/user/"+user_id+"/media").then(function(response){return response.data},function(response){console.log(response.data.message)});return promise};return{user:user,saveUser:saveUser,getFeed:getFeed}}),angular.module("unifyApp").config(function($translateProvider){$translateProvider.useStaticFilesLoader({prefix:"scripts/i18n/locale-",suffix:".json"}),$translateProvider.preferredLanguage("es_AR")});